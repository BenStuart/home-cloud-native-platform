---

- name: "Check if {{ docker }} is installed"
  command: "{{ docker }} --version"
  ignore_errors: true
  changed_when: false # read-only task
  check_mode: no
  register: docker_install_check

- name: install docker
  import_tasks: install.yml
  tags:
    - installation
    - docker
  when: docker_install_check.rc != 0 or docker_upgrade

- name: 'Add any additional docker startup options via the daemon.json config file'
  become: true
  copy:
    src: "docker/daemon.json"
    dest: '/etc/docker/daemon.json'
    owner: 'root'
    group: 'root'
    backup: yes
    mode: '0600'
  # notify: 'docker-restart-service'

- name: Ensure Docker is started and enabled at boot
  become: true
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"

- name: 'Ensure that the docker service is functional'
  docker_ping:
    register: result
    retries: 5
    delay: 10
  until: result|success
  when: 0

- name: Ensure group "docker" exists
  group:
    name: docker
    state: present

- name: Ensure current user is in docker group
  become: true
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes

- name: "Ensure pip modules {{ docker_python_module.modules }} are installed"
  become: true
  pip:
    # executable: pip3
    # extra_args: --user
    name: "{{ docker_python_module.modules }}"
    state: latest
