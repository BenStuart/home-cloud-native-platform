---


- name: "deregister {{ portainer.service.name }} service with the local consul agent"
  consul:
    service_name: "{{ portainer.service.name }}-{{ item.value }}"
    service_port: "{{ item.value }}"
    state: absent
  with_dict: "{{ portainer.service.ports }}"
  when: service_consul_running

- name: "Create configuration directory"
  file:
    path: "{{ portainer.storage }}"
    state: directory

# - name: "[Clustered Mode] Generate endpoints configuration file at {{ portainer.storage }}/endpoints.json"
#   template:
#     src: endpoints.json.j2
#     dest: "{{ portainer.storage }}/endpoints.json"
#   with_items: "{{ hcnp_node_list }}"
#   when: hcnp_node_list is defined and (hcnp_node_list | length > 1)

# - name: "[Standalone Mode] Generate endpoints configuration file at {{ portainer.storage }}/endpoints.json"
#   template:
#     src: endpoints.json.j2
#     dest: "{{ portainer.storage }}/endpoints.json"
#   when: hcnp_node_list is not defined or (hcnp_node_list | length < 2)

# https://www.portainer.io/installation/
# docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer
- name: "Run image {{ portainer.image.name }}:{{ portainer.image.tag }} as service {{ portainer.service.name }}"
  docker_container:
    name: "{{ portainer.service.name }}"
    image: "{{ portainer.image.name }}:{{ portainer.image.tag }}"
    command:
      # - --external-endpoints
      # - /srv/portainer/endpoints.json
      - --no-auth
    labels:
      traefik.enable: "true"
      traefik.backend: "portainer"
      # traefik.frontend.rule: "Host:portainer.${DOMAINNAME}"
      # traefik.frontend.rule: "Host:${DOMAINNAME}; PathPrefixStrip: /portainer"
      traefik.frontend.rule: "PathPrefixStrip: /portainer"
      traefik.port: "9000"
      # traefik.docker.network: "{{ hcnp_network }}"
      # traefik.frontend.headers.SSLRedirect: "true"
      # traefik.frontend.headers.STSSeconds: "315360000"
      # traefik.frontend.headers.browserXSSFilter: "true"
      # traefik.frontend.headers.contentTypeNosniff: "true"
      # traefik.frontend.headers.forceSTSHeader: "true"
      # traefik.frontend.headers.SSLHost: "example.com"
      # traefik.frontend.headers.STSIncludeSubdomains: "true"
      # traefik.frontend.headers.STSPreload: "true"
      # traefik.frontend.headers.frameDeny: "true"
    # networks:
    #   - name: "{{ hcnp_network }}"
    published_ports:
      - "{{ portainer.service.ports.http }}:9000"
    restart_policy: always
    state: started
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ portainer.service.volumes.data }}:/data"
      - "{{ portainer.storage.configuration }}:/srv/portainer"

- name: "register {{ portainer.service.name }} service with the local consul agent"
  consul:
    service_name: "{{ portainer.service.name }}-{{ item.value }}"
    service_port: "{{ item.value }}"
    state: present
  with_dict: "{{ portainer.service.ports }}"
  when: service_consul_running
