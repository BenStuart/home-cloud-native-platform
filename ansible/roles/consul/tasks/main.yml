---

# Based on https://medium.com/@mitesh_shamra/setup-hashicorp-consul-using-ansible-fa8073a70a56

# Create group and user for consul
- name: "Creating consul user group {{ consul_group }}"
  become: true
  group: 
    name: "{{ consul_group }}"

- name: Creating consul user
  become: true
  user:
    name: "{{ consul_user }}"
    group: "{{ consul_group }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "consul nologin User"
    createhome: "no"
    state: present

# Install binary from archive
- name: Install prerequisites
  become: true
  package:
    name: "{{ item }}"
    update_cache: yes
  with_items: "{{ consul_install_prerequisites }}"

- name: Download binary
  become: true
  get_url:
    url: https://releases.hashicorp.com/consul/{{consul_version}}/consul_{{consul_version}}_linux_amd64.zip
    dest: /tmp/consul_{{consul_version}}_linux_amd64.zip
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0755
    checksum: "{{consul_checksum}}"
  register: consul_download

- name: "Unzip consul archive"
  become: true
  unarchive:
    src: "{{ consul_download.dest }}"
    dest: /usr/local/bin
    copy: no
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0755

# Need to set binary capabilities on Linux, to give the consul executable the ability to use the mlock syscall without running the process as root.
- name: "Set consul binary capabilities"
  become: true
  capabilities:
    path: /usr/local/bin/consul
    capability: cap_ipc_lock+ep
    state: present
  when: 0

# Configure systemd
- name: Copy systemd init file
  become: true
  template:
    src: init.service.j2
    dest: /etc/systemd/system/consul.service
    owner: root
    group: root
  notify: systemd_reload
  when: 0

- name: config file
  become: true
  template:
    src: consul.hcl.j2
    dest: "{{ consul_config_path }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
  when: 0

- name: consul service
  become: true
  service:
    name: consul
    state: started
    enabled: yes
  when: 0
