---

# Create group
- name: "Create system group {{ openhab.group.name }} with id {{ openhab.group.id }}"
  become: true
  group:
    name: "{{ openhab.group.name }}"
    state: present
    gid: "{{openhab.group.id }}"
    system: yes

# sudo useradd -r -s /sbin/nologin openhab
- name: Create system user {{ openhab.user.name }} with id {{ openhab.user.id }}"
  become: true
  user:
    name: "{{ openhab.user.name }}"
    create_home: no
    group: "{{ openhab.group.name }}"
    system: yes
    shell: /sbin/nologin
    uid: "{{ openhab.user.id }}"

# usermod -a -G openhab <user>
- name: "Add user {{ ansible_user }} to group {{ openhab.group.name }}"
  become: true
  user:
    name: "{{ ansible_user }}"
    groups: "{{ openhab.group.name }}"
    append: yes

# Create directories
- name: "Create base directory {{ openhab.directories.base }}"
  become: true
  file:
    name: "{{ openhab.directories.base }}"
    state: directory
    owner: "{{ openhab.user.name }}"
    group: "{{ openhab.group.name }}"
    mode: 0755

# Create data directories
- name: Create data directories
  become: true
  file:
    name: "{{ openhab.directories.base }}/{{ item }}"
    state: directory
    owner: "{{ openhab.user.name }}"
    group: "{{ openhab.group.name }}"
    mode: 0755
  loop: "{{ openhab.directories.data }}"

# Clone configureation
- name: Clone configuration
  git:
    repo: 'https://github.com/greenthegarden/openhab2-configuration.git'
    dest: "{{ openhab.directories.data }}/config"
    update: yes

# docker run --name=gogs -p 10022:22 -p 10080:3000 -v /var/gogs:/data gogs/gogs-rpi
- name: "Run image {{ openhab.container.image }} as container {{ openhab.container.name }}"
  docker_container:
    name: "{{ openhab.container.name }}"
    image: "{{ openhab.container.image }}"
    env:
      EXTRA_JAVA_OPTS: "-Duser.timezone=Australia/Adelaide"
      USER_ID: "{{ openhab.user.id }}"
      GROUP_ID: "{{ openhab.group.id }}"
    recreate: yes
    keep_volumes: yes
    hostname: openhab.localnet
    memory: 512m
    network_mode: host
    pull: true
    restart_policy: unless-stopped
    state: started
    detach: yes
    interactive: yes
    tty: yes
    published_ports:
      - "{{ openhab.container.ports.http }}:8080"
      - "{{ openhab.container.ports.https }}:8443"
      - "{{ openhab.container.ports.ssh }}:8101"
      - "{{ openhab.container.ports.lsp }}:5007"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /opt/openhab/addons:/openhab/addons
      - /opt/openhab/conf:/openhab/conf
      - /opt/openhab/userdata:/openhab/userdata
