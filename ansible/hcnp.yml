---

- hosts: hcnp-nodes
 
  vars:

    pip_versions: [
      { python: 'python2', pip: 'pip2' },
    ]

    # resolv_nameservers: "{{ groups['rpi-hcnp-nodes'].ansible_default_ipv4.address }}"
    resolv_nameservers: "{{ groups['hcnp-nodes'] | map('extract', hostvars, ['ansible_default', 'ipv4', 'address']) | join(',') }}"
    # resolv_domain: "foo.org" # consul domain?
    # resolv_search:
    #   - "foo.bar"
    #   - "foobar.com"
    resolv_options:
      - "timeout:2"
      - "rotate"

    run_update: no
    run_git: yes
    run_pip: no

  tasks:

    - debug:
        msg: "Running tasks on {{ ansible_host }}-{{ ansible_hostname }} at {{ ansible_default_ipv4.interface }}:{{ ansible_default_ipv4.address }} as user {{ ansible_user_id }}"

    - debug:
        var: resolv_nameservers
        
    - name: "Upgrade all packages on node"
      import_role:
        name: base
        tasks_from: update
      tags:
        - update
      when: run_update

    # git is required to build some images from source
    - name: "Ensure git is installed"
      import_role:
        name: git
        tasks_from: install
      tags:
        - git
      when: run_git

    # pip is required to install modules for docker
    - name: "Run pip role"
      import_role:
        name: pip
      tags:
        - pip
      when: run_pip


# Run role to install and configure consul
- hosts: consul_instances

  tasks:

    - name: "Run consul role"
      import_role:
        name: consul
      tags:
        - consul

# Run role to install and configure vault
# - hosts: vault_instances

#   tasks:

#     - import_role:
#         name: vault
#       tags:
#         - vault

#     - import_role:
#         name: vault-init
#       tags:
#         - vault
#       when: 0

#     - import_role:
#         name: vault-unseal
#       tags:
#         - vault


# Run role to install and configure docker
- hosts: docker_instances

  tasks:

    - import_role:
        name: docker
      tags:
        - docker


# Run role to install and configure nomad
- hosts: nomad_instances

  vars:
    nomad_use_consul: yes
    nomad_bootstrap_expect: 1
    nomad_docker_enable: yes

  tasks:

    - name: "Run nomad role"
      import_role:
        name: nomad
      tags:
        - nomad


# Run up Traefik
- hosts: hcnp-nodes

  tasks:

    - set_fact:
        consul_iface: "\
          {% if ansible_os_family == 'Windows' %}\
            {{ lookup('env','CONSUL_IFACE') | default(ansible_interfaces[0].interface_name, true) }}\
          {% else %}\
            {{ lookup('env','CONSUL_IFACE') | default(ansible_default_ipv4.interface, true) }}\
          {% endif %}"
    
    - set_fact:
        consul_bind_address: "\
          {% if ansible_system == 'FreeBSD' %}\
            {{ lookup('env','CONSUL_BIND_ADDRESS') | default(hostvars[inventory_hostname]['ansible_'+ consul_iface ]['ipv4'][0]['address'], true) }}\
          {% elif ansible_os_family == 'Windows'  %}\
            {{ lookup('env','CONSUL_BIND_ADDRESS') | default(hostvars[inventory_hostname]['ansible_ip_addresses'][0], true) }}\
          {% else %}\
            {{ lookup('env','CONSUL_BIND_ADDRESS') | default(hostvars[inventory_hostname]['ansible_'+ consul_iface ]['ipv4']['address'], true) }}\
          {% endif %}"

    - debug:
        var: consul_iface

    - debug:
        var: consul_bind_address

    - name: "Configure traefik"
      import_role:
        name: traefik
        tasks_from: configure.yml
      tags:
        - traefik

    - name: "Run Traefik as a container"
      import_role:
        name: traefik
        tasks_from: container.yml
      tags:
        - traefik
        