# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

# Load settings from vagrant.yml or vagrant.yml.dist
current_dir = File.dirname(File.expand_path(__FILE__))
if File.file?("#{current_dir}/vagrant.yml")
  config_file = YAML.load_file("#{current_dir}/vagrant.yml")
elsif
  config_file = YAML.load_file("#{current_dir}/vagrant.yml.dist")
else
  exit(1)
end

Vagrant.configure('2') do |config|

  config.vm.box = 'azure'

  if Vagrant::Util::Platform.windows?

    config.vm.provider :azure do |azure, override|

      # each of the below values will default to use the env vars named as below if not specified explicitly
      azure.tenant_id = ENV['AZURE_TENANT_ID']
      azure.client_id = ENV['AZURE_CLIENT_ID']
      azure.client_secret = ENV['AZURE_CLIENT_SECRET']
      azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']

      azure.vm_image_urn = 'MicrosoftSQLServer:SQL2016-WS2012R2:Express:latest'
      azure.instance_ready_timeout = 600
      azure.vm_password = 'TopSecretPassw0rd'
      azure.admin_username = "OctoAdmin"
      override.winrm.transport = :ssl
      override.winrm.port = 5986
      override.winrm.ssl_peer_verification = false # must be false if using a self signed cert

    end

  else

    # use local ssh key to connect to remote vagrant box
    config.ssh.private_key_path = '~/.ssh/id_rsa'

    config.vm.provider :azure do |azure, override|

      # each of the below values will default to use the env vars named as below if not specified explicitly
      azure.tenant_id = ENV['AZURE_TENANT_ID']
      azure.client_id = ENV['AZURE_CLIENT_ID']
      azure.client_secret = ENV['AZURE_CLIENT_SECRET']
      azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']

    end

  end

end